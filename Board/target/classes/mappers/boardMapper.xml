<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	<!-- 글 목록 검색 -->
	<select id="getBoardList" parameterType="hashmap" resultType="com.spring.board.model.BoardVO">
		SELECT A.BOARD_CD AS BOARD_CD
			  , A.USER_ID AS USER_ID
			  , A.TITLE AS TITLE
			  , A.CONTENT AS CONTENT
			  , A.IN_ID AS IN_ID
			  , A.IN_DATE AS IN_DATE
			  , A.UP_ID AS UP_ID
			  , A.UP_DATE AS UP_DATE
		  FROM BOARD A
	  <trim prefix="WHERE" prefixOverrides="AND |OR ">
	  	<if test="searchVO.keyword != null and searchVO.keyword != ''">
		    <if test="searchVO.searchType == 'title' or searchVO.searchType == 'all'">
		    	A.TITLE LIKE CONCAT('%', #{searchVO.keyword}, '%')
		    </if> 
		    <if test="searchVO.searchType == 'content' or searchVO.searchType == 'all'">
		     OR A.CONTENT LIKE CONCAT('%', #{searchVO.keyword}, '%')
		    </if>
		    <if test="searchVO.searchType == 'in_id' or searchVO.searchType == 'all'">
		     OR A.IN_ID LIKE CONCAT('%', #{searchVO.keyword}, '%')
		    </if>
	    </if> 
	  </trim>
		 ORDER BY A.IN_DATE DESC
		  		, A.BOARD_CD DESC
		 LIMIT #{pagination.startList}, #{pagination.listSize}
	</select>
	<!-- 글 상세 검색 -->
	<select id="getBoardContent" resultType="com.spring.board.model.BoardVO">
		SELECT A.BOARD_CD AS BOARD_CD
			  , A.USER_ID AS USER_ID
			  , A.TITLE AS TITLE
			  , A.CONTENT AS CONTENT
			  , A.IN_ID AS IN_ID
			  , A.IN_DATE AS IN_DATE
			  , A.UP_ID AS UP_ID
			  , A.UP_DATE AS UP_DATE
		  FROM BOARD A
		 WHERE A.BOARD_CD = #{board_cd}
	</select>
	<select id="getBoardCnt" resultType="int">
		SELECT COUNT(1)
 		  FROM BOARD
	  <trim prefix="WHERE" prefixOverrides="AND |OR ">
	  	<if test="keyword != null and keyword != ''">
		    <if test="searchType == 'title' or searchType == 'all'">
		    	TITLE LIKE CONCAT('%', #{keyword}, '%')
		    </if> 
		    <if test="searchType == 'content' or searchType == 'all'">
		     OR CONTENT LIKE CONCAT('%', #{keyword}, '%')
		    </if>
		    <if test="searchType == 'in_id' or searchType == 'all'">
		     OR IN_ID LIKE CONCAT('%', #{keyword}, '%')
		    </if>
	    </if> 
	  </trim>
	</select>
	<!-- 댓글 리스트 조회 -->
	<select id="getCommentList" parameterType="hashmap" resultType="com.spring.board.model.CommentVO">
		SELECT A.COMMENT_CD AS COMMENT_CD
			  , A.BOARD_CD AS BOARD_CD
			  , A.COMMENT_CLASS AS COMMENT_CLASS
			  , A.USER_ID AS USER_ID
			  , A.COMMENT_CONTENT AS COMMENT_CONTENT
			  , A.IN_ID AS IN_ID
			  , A.IN_DATE AS IN_DATE
		  FROM BOARD_COMMENT A
		 WHERE A.BOARD_CD = #{board_cd}
		 ORDER BY A.IN_DATE
		 LIMIT #{pagination.startList}, #{pagination.listSize}
	</select>
	<!-- comment cnt -->
	<select id="getCommentCnt" parameterType="int" resultType="int">
		SELECT COUNT(1)
		  FROM BOARD_COMMENT A
		 WHERE A.BOARD_CD = #{board_cd}
	</select>
	<!-- board insert -->
	<insert id="insertBoard" parameterType="com.spring.board.model.BoardVO">
		INSERT
		  INTO BOARD (
		  		USER_ID
			  , TITLE
			  , CONTENT
			  , IN_ID
			  , IN_DATE
			  , UP_ID
			  , UP_DATE
			  ) VALUES (
			    #{user_id}
			  , #{title}
			  , #{content}
			  , #{in_id}
			  , NOW()
			  , #{up_id}
			  , NOW()
		 		)
	</insert>
	<!-- comment insert -->
	<insert id="insertComment" parameterType="com.spring.board.model.CommentVO">
		<selectKey resultType="int" keyProperty="comment_cd" order="BEFORE">
			SELECT IFNULL(MAX(COMMENT_CD), 0) + 1
			  FROM BOARD_COMMENT A
			 WHERE A.BOARD_CD = #{board_cd}
			   AND A.COMMENT_CLASS = #{comment_class}
		</selectKey>
		INSERT
		  INTO BOARD_COMMENT (
				BOARD_CD
		      , COMMENT_CD
			  , COMMENT_CLASS
			  , USER_ID
			  , COMMENT_CONTENT
			  , IN_ID
		     ) VALUES (
			    #{board_cd}
			  , #{comment_cd}
			  , #{comment_class}
			  , #{user_id}
			  , #{comment_content}
			  , #{user_id}
				)
	</insert>
	<!-- board update -->
	<update id="updateBoard" parameterType="com.spring.board.model.BoardVO">
		UPDATE BOARD
		   SET TITLE = #{title}
		     , CONTENT = #{content}
		     , UP_ID = #{up_id}
		     , UP_DATE = NOW()
		 WHERE BOARD_CD = #{board_cd}
 	</update>
	<!-- comment update -->
	<update id="updateComment" parameterType="com.spring.board.model.CommentVO">
		UPDATE BOARD_COMMENT
		   SET COMMENT_CONTENT = #{comment_content}
		     , UP_DATE = NOW()
		 WHERE BOARD_CD = #{board_cd}
		   AND COMMENT_CD = #{comment_cd}
		   AND COMMENT_CLASS = #{comment_class}
 	</update>
 	<!-- board delete -->
	<delete id="deleteBoard" parameterType="com.spring.board.model.BoardVO">
		DELETE
		  FROM BOARD
		 WHERE BOARD_CD = #{board_cd}
	</delete>
 	<!-- comment delete -->
	<delete id="deleteComment" parameterType="com.spring.board.model.CommentVO">
		DELETE
		  FROM BOARD_COMMENT
		 WHERE BOARD_CD = #{board_cd}
		   AND COMMENT_CD = #{comment_cd}
		   AND COMMENT_CLASS = #{comment_class}
	</delete>
</mapper>